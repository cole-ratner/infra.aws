name: 'Terraform'
on:
  push:
    branches:
    - master
    paths: 
    - "aws/*/**"
    - "azure/*/**"
    - "gcp/*/**"
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      working-directory: "aws/basic/"
    steps:


    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_CLOUD_API_KEY }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: ${{ env.working-directory }}
      run: terraform fmt -check

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ${{ env.working-directory }}
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      working-directory: ${{ env.working-directory }}
      run: terraform plan

      # On push to master, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ${{ env.working-directory }}
      run: terraform apply -auto-approve
